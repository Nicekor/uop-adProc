/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import boxes.CardboardBox;
import boxes.CardboardBoxI;
import boxes.CardboardBoxII;
import boxes.CardboardBoxIII;
import boxes.CardboardBoxIV;
import boxes.CardboardBoxV;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import order.Order;

/**
 *
 * @author nicekor
 */
public class GUI extends javax.swing.JFrame {

    private Order checkout = new Order(); //array list for the boxes
    /**
     * Creates new form GUI
     */
    public GUI() {
        // centering the frame
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize.width/2, screenSize.height/2);
        this.setLocationRelativeTo(null);
        this.setMinimumSize(new Dimension(680, 367));
        
        
        
        // initializing components of the frame
        initComponents();
        System.out.println("Frame widht: " + this.getSize().width); // min: 680
        System.out.println("Frame height: " + this.getSize().height); // min: 367
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coloursGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtWidth = new javax.swing.JTextField();
        txtLength = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        oneColour = new javax.swing.JRadioButton();
        noColour = new javax.swing.JRadioButton();
        twoColour = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bottomsCheck = new javax.swing.JCheckBox();
        cornersCheck = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        gradeCombo = new javax.swing.JComboBox<>();
        quantitySpinner = new javax.swing.JSpinner();
        sealableTopCheck = new javax.swing.JCheckBox();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        basketList = new java.awt.List();
        clearOrderBtn = new javax.swing.JButton();
        boxDetailsBtn = new javax.swing.JButton();
        removeBoxBtn = new javax.swing.JButton();
        checkOutBtn = new javax.swing.JButton();
        displayCost = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FlexBox");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Size of the Box*"));

        jLabel1.setText("Width");

        jLabel2.setText("Length");

        jLabel3.setText("Height");

        jLabel5.setText("m");

        jLabel6.setText("m");

        jLabel7.setText("m");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLength)
                            .addComponent(txtHeight))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Colour Print*"));

        coloursGroup.add(oneColour);
        oneColour.setText("1");
        oneColour.setEnabled(false);
        oneColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneColourActionPerformed(evt);
            }
        });

        coloursGroup.add(noColour);
        noColour.setText("0");
        noColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noColourActionPerformed(evt);
            }
        });

        coloursGroup.add(twoColour);
        twoColour.setText("2");
        twoColour.setEnabled(false);
        twoColour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoColourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(noColour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oneColour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(twoColour)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noColour)
                    .addComponent(oneColour)
                    .addComponent(twoColour))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Reinforced"));

        jLabel8.setText("Bottoms");

        jLabel9.setText("Corners");

        bottomsCheck.setEnabled(false);
        bottomsCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bottomsCheckActionPerformed(evt);
            }
        });

        cornersCheck.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bottomsCheck)
                    .addComponent(cornersCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(bottomsCheck))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(cornersCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 187, 187)));

        jLabel4.setText("Grade:");

        jLabel10.setText("Quantity:");

        jLabel11.setText("Sealable Top:");

        gradeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        gradeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeComboActionPerformed(evt);
            }
        });

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gradeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sealableTopCheck)
                        .addGap(18, 18, 18))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sealableTopCheck, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(gradeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addBtn.setText("Add to Basket");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(25, 25, 25)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(clearBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buy", jPanel1);

        clearOrderBtn.setText("Clear Order");
        clearOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearOrderBtnActionPerformed(evt);
            }
        });

        boxDetailsBtn.setText("Box Details");
        boxDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxDetailsBtnActionPerformed(evt);
            }
        });

        removeBoxBtn.setText("Remove Box");
        removeBoxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBoxBtnActionPerformed(evt);
            }
        });

        checkOutBtn.setText("Check Out");
        checkOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutBtnActionPerformed(evt);
            }
        });

        displayCost.setText("Total Cost: £ 0.00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(basketList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(clearOrderBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxDetailsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeBoxBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayCost)
                        .addGap(18, 18, 18)
                        .addComponent(checkOutBtn)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(basketList, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearOrderBtn)
                    .addComponent(boxDetailsBtn)
                    .addComponent(removeBoxBtn)
                    .addComponent(checkOutBtn)
                    .addComponent(displayCost))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Basket", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bottomsCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bottomsCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bottomsCheckActionPerformed

    private void failedToPurchase(String string){
        JOptionPane.showMessageDialog(this, string, "ERROR", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    private int getUserColour(){
        int colour = 0;
        
        // colours
        if (noColour.isSelected()){
            colour = 0;
        }
        else if (oneColour.isSelected()){
            colour = 1;
        }
        else if (twoColour.isSelected()){
            colour = 2;
        }
        return colour;
    }
    
    private double[] getUserSizes(){
        double[] sizes = new double[3]; // sizes[0] = width; sizes[1] = length; sizes[2] = height;
        double[] noSizes = new double[0]; // to return an empty array if some error occurs
        final double MIN_SIZE = 0.1;
        final double MAX_SIZE = 5;
        try{
            sizes[0] = Double.parseDouble(txtWidth.getText());
            sizes[1] = Double.parseDouble(txtLength.getText());
            sizes[2] = Double.parseDouble(txtHeight.getText());
            
            for (int i = 0; i < sizes.length; i++){
                if (sizes[i] < MIN_SIZE || sizes[i] > MAX_SIZE){
                    failedToPurchase("Please enter a size between 0.1 and 5 meters.");
                    return noSizes;
                }
            }
        }
        catch (NumberFormatException nfe){
            failedToPurchase("Sizes must be a number.");
            return noSizes;
        }
        return sizes;
    }
    
    private int getUserQuantity(){
        int quantity = (Integer)quantitySpinner.getValue();
        return quantity;
    }
    
    private int getUserGrade(){
        int grade = Integer.parseInt((String)gradeCombo.getSelectedItem());
        return grade;
    }
    
    private boolean getUserSealable(){
        return sealableTopCheck.isSelected();
    }
    
    private boolean emptyFields(){ // check if there are empty required fields
        if(txtWidth.getText().equals("") || txtHeight.getText().equals("") || txtLength.getText().equals("")
            || (!noColour.isSelected() && !oneColour.isSelected() && !twoColour.isSelected())){
            failedToPurchase("Please fill all the required fields! (*)");
            return true;
        }
        return false;
    }
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        boolean emptyFields = emptyFields();
        if(emptyFields == true){ // to quit the method
            return;
        }
            
        int colour = getUserColour(); // get colour from the user
        
        double[] sizes = getUserSizes(); // get sizes of the box as an array from the user
        if(sizes.length == 0){ // to quit the method
            return;
        }
        
        double width = sizes[0]; // declare each size of the array in a variable referencing to the side
        double length = sizes[1];
        double height = sizes[2];
        int quantity = getUserQuantity(); //get quantity from the user
        int grade = getUserGrade(); // get grade from the user
        boolean sealableTop = getUserSealable();

        System.out.println("----------------");
        System.out.println("Box Details:");
        System.out.println("Colour: " + colour);
        System.out.println("Width: " + width);
        System.out.println("Length: " + length);
        System.out.println("Height: " + height);
        System.out.println("Quantity: " + quantity);
        System.out.println("Grade: " + grade);
        System.out.println("Sealable Top: " + sealableTop);
        
        CardboardBox box = calculateCardboardBoxType(colour, quantity, height, length, width, grade, sealableTop);
        
        if (box == null) {
            return;
        }
        
        checkout.addBox(box);
        updateBasketList(checkout);
        sendBoxAdded(box);
    }//GEN-LAST:event_addBtnActionPerformed
    
    private CardboardBox calculateCardboardBoxType(int colour, int quantity, double height, double length, double width, int grade, boolean sealableTop) {
        if (colour == 0) {
            return new CardboardBoxI(quantity, width, length, height, grade, sealableTop);
        } else if (colour == 1) {
            return new CardboardBoxII(quantity, width, length, height, grade, sealableTop);
        }
        //2
        if (bottomsCheck.isSelected()) {//IV
            if (cornersCheck.isSelected()) { //V
                return new CardboardBoxV(quantity, width, length, height, grade, sealableTop);
            }
            return new CardboardBoxIV(quantity, width, length, height, grade, sealableTop);
        }
        return new CardboardBoxIII(quantity, width, length, height, grade, sealableTop);
    }
    
    private void updateBasketList(Order checkout){
        basketList.removeAll();
        int i = 1;
        for (CardboardBox box : checkout.getBoxes()) {
            String listEntry = "Order: " + i + " | Cost: £" + String.format("%.2f", box.calculateTotalPrice());
            basketList.add(listEntry);
            i++;
        }
        displayCost.setText("Total Cost : £" + String.format("%.2f", checkout.calculateTotalPrice()));
    }
    
    private void sendBoxAdded(CardboardBox box) {
        JOptionPane.showMessageDialog(this, "Box Added Costing : £" + String.format("%.2f", box.calculateTotalPrice()), "Box Added", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        txtWidth.setText("");
        txtLength.setText("");
        txtHeight.setText("");
        
        coloursGroup.clearSelection();
        
        gradeCombo.setSelectedIndex(0);
        
        sealableTopCheck.setSelected(false);
        
        quantitySpinner.setValue(0);
        
        bottomsCheck.setSelected(false);
        cornersCheck.setSelected(false);
    }//GEN-LAST:event_clearBtnActionPerformed

    private void noColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noColourActionPerformed
        bottomsCheck.setEnabled(false);
        cornersCheck.setEnabled(false);
    }//GEN-LAST:event_noColourActionPerformed

    private void oneColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneColourActionPerformed
        bottomsCheck.setEnabled(false);
        cornersCheck.setEnabled(false);
    }//GEN-LAST:event_oneColourActionPerformed

    private void twoColourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoColourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_twoColourActionPerformed

    private void gradeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeComboActionPerformed
        int grade = getUserGrade();
        if (grade == 1) {
            noColour.setEnabled(true);
            oneColour.setEnabled(false);
            twoColour.setEnabled(false);
            
            coloursGroup.clearSelection();
            
            bottomsCheck.setEnabled(false);
            cornersCheck.setEnabled(false);
            
            bottomsCheck.setSelected(false);
            cornersCheck.setSelected(false);
        } else if (grade == 2) {
            noColour.setEnabled(true);
            oneColour.setEnabled(true);
            twoColour.setEnabled(true);
            
            coloursGroup.clearSelection();
            
            bottomsCheck.setEnabled(true);
            cornersCheck.setEnabled(false);
            
            cornersCheck.setSelected(false);
            
        } else if (grade == 3){
            noColour.setEnabled(true);
            oneColour.setEnabled(true);
            twoColour.setEnabled(true);
            
            coloursGroup.clearSelection();
            
            bottomsCheck.setEnabled(true);
            cornersCheck.setEnabled(true);
        } else if (grade == 4) {
            noColour.setEnabled(false);
            oneColour.setEnabled(true);
            twoColour.setEnabled(true);

            coloursGroup.clearSelection();
            
            bottomsCheck.setEnabled(true);
            cornersCheck.setEnabled(true);
        } else {
            noColour.setEnabled(false);
            oneColour.setEnabled(false);
            twoColour.setEnabled(true);

            coloursGroup.clearSelection();
            
            bottomsCheck.setEnabled(true);
            cornersCheck.setEnabled(true);
        }
    }//GEN-LAST:event_gradeComboActionPerformed

    private void clearOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearOrderBtnActionPerformed
        basketList.removeAll();
        checkout.clear();
        displayCost.setText("Total Cost : £0.00");
    }//GEN-LAST:event_clearOrderBtnActionPerformed

    private void boxDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxDetailsBtnActionPerformed
        int index = basketList.getSelectedIndex();
        if (index >= basketList.getItemCount() || index == -1) {
            JOptionPane.showMessageDialog(this, "Please select the box you wish to View", "View Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        showDetails(checkout.getBoxes().get(index), index + 1);
    }//GEN-LAST:event_boxDetailsBtnActionPerformed

    private void removeBoxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBoxBtnActionPerformed
        int index = basketList.getSelectedIndex();
        if (index >= basketList.getItemCount() || index == -1) {
            JOptionPane.showMessageDialog(this, "Please select the box you wish to remove", "Remove Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        checkout.removeBox(index);
        updateBasketList(checkout);
    }//GEN-LAST:event_removeBoxBtnActionPerformed

    private void checkOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutBtnActionPerformed
        JOptionPane.showMessageDialog(this, "Amount of boxes: " + checkout.getBoxes().size() + "\nTotal: £" + String.format("%.2f", checkout.calculateTotalPrice()), "Checkout", JOptionPane.INFORMATION_MESSAGE);
        checkout.clear();
        displayCost.setText("Total Cost : £0.00");
        updateBasketList(checkout);
    }//GEN-LAST:event_checkOutBtnActionPerformed
    
    private void showDetails(CardboardBox box, int index) {
        String[] all = box.getAll();
        JOptionPane.showMessageDialog(this, "Height: " + all[3]
                + "\nWidth: " + all[2]
                + "\nLength: " + all[4]
                + "\nColour: " + all[0]
                + "\nGrade: " + all[5]
                + "\nQuantity: " + all[1]
                + "\nReinforced Bottom: " + all[6]
                + "\nReinforced Corners: " + all[7]
                + "\nSealable Top: " + all[8], "Box Information | Order : " + index, JOptionPane.INFORMATION_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private java.awt.List basketList;
    private javax.swing.JCheckBox bottomsCheck;
    private javax.swing.JButton boxDetailsBtn;
    private javax.swing.JButton checkOutBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton clearOrderBtn;
    private javax.swing.ButtonGroup coloursGroup;
    private javax.swing.JCheckBox cornersCheck;
    private javax.swing.JLabel displayCost;
    private javax.swing.JComboBox<String> gradeCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton noColour;
    private javax.swing.JRadioButton oneColour;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JButton removeBoxBtn;
    private javax.swing.JCheckBox sealableTopCheck;
    private javax.swing.JRadioButton twoColour;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables
}
